#!/bin/zsh

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"
alias g=" git"

# Detect which `ls` flavor is in use
if ls --color >/dev/null 2>&1; then # GNU `ls`
  colorflag="--color"
else # OS X `ls`
  colorflag="-G"
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# Enable aliases to be sudoâ€™ed
alias sudo='nocorrect sudo'

# Git stuff

function gcap() {
  g ca "$@" && git push 
}

alias ls=' eza --group-directories-first'
alias la=' ls -a'
alias ll=' ls --git -l'


alias vim="nvim"

alias raisync="rsync -rvzP"

alias pbpaste="wl-paste"
alias pbcopy="wl-copy"

function czm() {
  command="chezmoi edit --apply $@"
  echo "$command"
  eval $command
  rr
}

function cd() {
  builtin cd "$@" && echo $PWD && ls;
}

alias czd="chezmoi diff"
alias czu="chezmoi update"

function standup2slack(){
  npx md2slack today | pbcopy;
  echo "Will send the following to slack:\n"
  echo "$(pbpaste)"
  echo "\n"
  read -q "REPLY?Continue?"

  case "$REPLY" in 
    y|Y ) echo "yes";;
    n|N ) echo "no";;
    * ) echo "invalid";;
  esac

  echo "Continuing..."
  # nodenv shell 18.7.0;
  # nodenv global 18.7.0;
  # npm install -g md2slack; 

  npx md2slack today | pbcopy;
  osascript -e 'tell application "Keyboard Maestro Engine" to do script "7DF44845-9F4C-40C2-8B8A-8A780D70936F"'
}

alias nvimcfg="nv ~/.config/nvim/lua/user"

alias gitroot='cd $(git rev-parse --show-toplevel)'

function gsync() {
  git fetch --all && for branch in $(git branch | sed '/*/{$q;h;d};$G' | tr -d '*') ; do git checkout $branch && git merge --ff-only || break ; done
  
}

alias gca="g ca"

function get_ssm_dotfile() {
	NAME=$1
	ENVIRONMENT=$2
	if [[ -z "$ENVIRONMENT" ]]; then
    ENVIRONMENT="STAGE"
	fi
	if [[ -z "$NAME" ]]; then
		echo "MISSING DOTFILE NAME, EXITING!"
		return 1
	else
		aws ssm get-parameters --name "/$ENVIRONMENT/dotfiles/$NAME" --with-decryption 	
	fi
}

function gcar() {
  echo "Quickly releasing change..."
  gca "$@" && \
  {
    if [ -f yarn.lock ]; then
      yarn release --force
    elif [ -f pnpm-lock.yaml ]; then
      pnpm release --force
    else
      echo "No lock file found for Yarn or PNPM. Please ensure you are in the correct project directory."
      return 1
    fi
  }
}

alias nvim_config="nv ~/.config/nvim/lua/user/init.lua"

function tmux_auto() {
    if tmux ls &>/dev/null; then
        tmux attach-session -t 0
    else
        tmux new-session
    fi
}

alias sudonvim="sudo -E nvim"

alias nixrebuild="nixos-rebuild switch"
alias homeswitch="home-manager switch"


